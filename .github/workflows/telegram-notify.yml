name: AI Git Analyzer
on: [push]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get git diff
        id: git_diff
        run: |
          git diff HEAD^ HEAD > diff.txt
          DIFF_CONTENT=$(jq -Rs < diff.txt)
          echo "DIFF=${DIFF_CONTENT}" >> $GITHUB_OUTPUT
          echo "DIFF_LINES=$(wc -l < diff.txt)" >> $GITHUB_OUTPUT

      - name: Verify OpenAI key
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            "https://api.openai.com/v1/models")
          if echo "$RESPONSE" | jq -e '.error' > /dev/null; then
            echo "::error::Invalid OpenAI key"
            exit 1
          else
            echo "OpenAI key is valid"
          fi

      - name: Analyze with AI
        id: ai_analysis
        uses: actions/github-script@v6
        env:
          OPENAI_KEY: ${{ secrets.OPENAI_API_KEY }}
          DIFF: ${{ steps.git_diff.outputs.DIFF }}
        with:
          script: |
            const {OPENAI_KEY, DIFF} = process.env;
            try {
              const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${OPENAI_KEY}`
                },
                body: JSON.stringify({
                  model: "gpt-3.5-turbo",
                  messages: [{
                    role: "user",
                    content: `Проанализируй изменения в коде:\n${DIFF}\n\nКраткий вывод:`
                  }],
                  temperature: 0.7,
                  max_tokens: 500
                })
              });

              const data = await response.json();
              console.log('OpenAI response:', JSON.stringify(data, null, 2));

              if (!data.choices?.[0]?.message?.content) {
                throw new Error('Invalid response from OpenAI');
              }
              return data.choices[0].message.content;
            } catch (error) {
              console.error('AI analysis failed:', error);
              return `❌ Ошибка анализа: ${error.message}`;
            }

      - name: Prepare Telegram message
        run: |
          MESSAGE="🤖 *AI Анализ изменений*:\n\n"\
          "${{ steps.ai_analysis.outputs.result }}\n\n"\
          "🔗 *Коммит*: https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
          echo "MESSAGE=${MESSAGE}" >> $GITHUB_ENV

      - name: Send to Telegram
        run: |
          curl -X POST \
            "https://api.telegram.org/bot7715307360:AAFvEpydlOSPY_pGT51AbExRAaECg-1P06Q/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "5615087670",
              "text": "'"$MESSAGE"'",
              "parse_mode": "MarkdownV2",
              "disable_web_page_preview": true
            }'
