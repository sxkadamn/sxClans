name: AI Git Analyzer (Debug)
on: [push]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get git diff
        id: git_diff
        run: |
          git diff HEAD^ HEAD > diff.txt
          echo "DIFF=$(cat diff.txt | jq -Rs)" >> $GITHUB_OUTPUT
          echo "Diff size: $(wc -l diff.txt)"

      - name: Verify OpenAI key
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
          "https://api.openai.com/v1/models" | jq .error || echo "Key valid"

      - name: Analyze with AI
        id: ai_analysis
        uses: actions/github-script@v6
        env:
          OPENAI_KEY: ${{ secrets.OPENAI_API_KEY }}
          DIFF: ${{ steps.git_diff.outputs.DIFF }}
        with:
          script: |
            const { OPENAI_KEY, DIFF } = process.env;
            const core = require('@actions/core');
            
            try {
              // Упрощенный запрос для теста
              const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${OPENAI_KEY}`
                },
                body: JSON.stringify({
                  model: "gpt-3.5-turbo",
                  messages: [{
                    role: "user", 
                    content: "Скажи просто 'Тест AI'"
                  }],
                  max_tokens: 10
                })
              });

              const data = await response.json();
              core.info(JSON.stringify(data, null, 2));
              
              if (!data.choices?.[0]?.message?.content) {
                throw new Error('Некорректный ответ от OpenAI');
              }
              
              return data.choices[0].message.content;
            } catch (error) {
              core.error(`AI Error: ${error.message}`);
              return "AI анализ временно недоступен";
            }

      - name: Debug outputs
        run: |
          echo "AI Result: ${{ steps.ai_analysis.outputs.result }}"
          echo "Message: ${{ env.MESSAGE }}"

      - name: Send to Telegram
        run: |
          MESSAGE="Результат: ${{ steps.ai_analysis.outputs.result }}"
          
          curl -v -X POST \
          "https://api.telegram.org/bot7715307360:AAFvEpydlOSPY_pGT51AbExRAaECg-1P06Q/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "5615087670",
            "text": "'"$MESSAGE"'"
          }'
