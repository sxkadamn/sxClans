name: Smart Git Changes Notifier
on: [push]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–º–º–∏—Ç—ã

      - name: Analyze changes
        id: analyze
        run: |
          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å —Ç–∏–ø–∞–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
          CHANGES=$(git diff --name-status HEAD^ HEAD | while read status file; do
            case $status in
              A) echo "‚Ä¢ üÜï –î–æ–±–∞–≤–ª–µ–Ω: $file";;
              M) echo "‚Ä¢ ‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω: $file";;
              D) echo "‚Ä¢ ‚ùå –£–¥–∞–ª–µ–Ω: $file";;
              R*) echo "‚Ä¢ ‚ôªÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: ${file#*$'\t'}";;
              C) echo "‚Ä¢ ¬©Ô∏è –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: $file";;
              *) echo "‚Ä¢ üîÑ –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: $file";;
            esac
          done)

          # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ
          DETAILS=$(git diff --stat HEAD^ HEAD)
          COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          AUTHOR=$(git log -1 --pretty=format:'%an')
          DATE=$(git log -1 --pretty=format:'%cd' --date=format:'%Y-%m-%d %H:%M')

          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          echo "CHANGES<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "DETAILS<<EOF" >> $GITHUB_OUTPUT
          echo "$DETAILS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "AUTHOR=$AUTHOR" >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_OUTPUT

      - name: Compose message
        run: |
          # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          MESSAGE="üìå *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ*: ${GITHUB_REPOSITORY##*/}
          
          üìù *–ö–æ–º–º–∏—Ç*: ${{ steps.analyze.outputs.COMMIT_MSG }}
          üë§ *–ê–≤—Ç–æ—Ä*: ${{ steps.analyze.outputs.AUTHOR }}
          üìÖ *–î–∞—Ç–∞*: ${{ steps.analyze.outputs.DATE }}
          
          üìÇ *–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π*:
          ${{ steps.analyze.outputs.CHANGES }}
          
          üìä *–î–µ—Ç–∞–ª–∏*:
          \`\`\`
          ${{ steps.analyze.outputs.DETAILS }}
          \`\`\`
          
          üîó *–ü–æ–ª–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è*: 
          https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"

          echo "MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send to Telegram
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "5615087670",
            "text": "'"$MESSAGE"'",
            "parse_mode": "MarkdownV2",
            "disable_web_page_preview": true
          }' \
          "https://api.telegram.org/bot7715307360:AAFvEpydlOSPY_pGT51AbExRAaECg-1P06Q/sendMessage"
